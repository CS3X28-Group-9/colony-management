# Generated by Django 5.2.7 on 2025-10-22 19:21

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Membership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("LEAD", "Lead"),
                            ("BREEDING", "Breeding"),
                            ("READER", "Reader"),
                        ],
                        default="READER",
                        max_length=16,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("start_date", models.DateField()),
                ("allow_over_18_months", models.BooleanField(default=False)),
                ("has_mod_sev_permission", models.BooleanField(default=False)),
                ("quota_5_years", models.PositiveIntegerField(blank=True, null=True)),
                ("license_constraints", models.TextField()),
                (
                    "lead",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="leading_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "researchers",
                    models.ManyToManyField(
                        through="mouseapp.Membership",
                        through_fields=("project", "user"),
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "permissions": [("create_project", "Create projects")],
            },
        ),
        migrations.AddField(
            model_name="membership",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="mouseapp.project"
            ),
        ),
        migrations.CreateModel(
            name="Box",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "box_type",
                    models.CharField(
                        choices=[("S", "Shoe"), ("T", "Stock")],
                        default="S",
                        max_length=1,
                    ),
                ),
                ("number", models.IntegerField()),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="mouseapp.project",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Boxes",
            },
        ),
        migrations.CreateModel(
            name="Request",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("approved_date", models.DateField(blank=True, null=True)),
                ("fulfill_date", models.DateField(blank=True, null=True)),
                (
                    "kind",
                    models.CharField(
                        choices=[
                            ("B", "Set up breeding pair"),
                            ("C", "Cull"),
                            ("T", "Transfer"),
                            ("Q", "BW Health Query"),
                        ],
                        max_length=1,
                    ),
                ),
                ("details", models.TextField()),
                (
                    "approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requests",
                        to="mouseapp.project",
                    ),
                ),
            ],
            options={
                "permissions": [
                    ("approve_request", "Can approve requests"),
                    ("fulfill_request", "Can mark requests fulfilled"),
                ],
            },
        ),
        migrations.CreateModel(
            name="RequestReply",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="mouseapp.request",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "permissions": [
                    ("send_reply", "Can send replies and queries on requests")
                ],
            },
        ),
        migrations.CreateModel(
            name="StudyPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(default="Draft", max_length=10)),
                (
                    "study_id",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("description", models.TextField()),
                ("approval_date", models.DateField(blank=True, null=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mouseapp.project",
                    ),
                ),
            ],
            options={
                "permissions": [
                    ("approve_study_plan", "Can approve a study plan"),
                    ("view_study_plan", "Can view study plans"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Mouse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        choices=[("F", "Female"), ("M", "Male")], max_length=1
                    ),
                ),
                ("date_of_birth", models.DateField()),
                ("tube_number", models.IntegerField()),
                ("strain", models.TextField()),
                ("coat_colour", models.TextField()),
                (
                    "earmark",
                    models.CharField(
                        blank=True,
                        max_length=16,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_earmark",
                                message="Earmark must follow the pattern ([TB][RL])* (e.g., TRBL, TRTR, BLBL).",
                                regex="^([TB][RL])*$",
                            )
                        ],
                    ),
                ),
                ("notes", models.TextField()),
                (
                    "box",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="mouseapp.box"
                    ),
                ),
                (
                    "father",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="child_set_f",
                        to="mouseapp.mouse",
                    ),
                ),
                (
                    "mother",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="child_set_m",
                        to="mouseapp.mouse",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="mouseapp.project",
                    ),
                ),
            ],
            options={
                "permissions": [("edit_mice", "Can edit mouse details")],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("project", "strain", "tube_number"),
                        name="unique_mouse_id_per_project",
                    )
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="membership",
            constraint=models.UniqueConstraint(
                fields=("project", "user"), name="unique_membership"
            ),
        ),
        migrations.AddConstraint(
            model_name="box",
            constraint=models.UniqueConstraint(
                fields=("project", "number"), name="uniq_box_per_project"
            ),
        ),
    ]
